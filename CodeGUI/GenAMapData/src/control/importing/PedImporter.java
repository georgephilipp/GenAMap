package control.importing;

import control.DataAddRemoveHandler;
import control.NewProjectCreator;
import control.itempanel.ThreadingItemFrame;
import control.itempanel.PedItem;
import datamodel.Project;
import datamodel.Model;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import java.io.*;

/**
 * This package will interface with the user to get all the information needed
 * to import ped data into the model.
 * @author ross
 */
public class PedImporter extends java.awt.Dialog
{

    private String fileName = "";
    private JFrame parent;
    private int numArgs;
    private boolean created = false;
    private ThreadingItemFrame form;
    private PedItem item;

    /** Creates new form TraitImporter */
    public PedImporter(java.awt.Container parent, boolean modal)
    {
        super((JFrame) parent, modal);
        //super(parent, modal);
        this.parent = (JFrame) parent;


        initComponents();
        this.setLocation(parent.getLocation());
        this.sampleButton.setEnabled(true);
        this.jLabel6.setEnabled(true);
        this.sampleHelpButton.setEnabled(true);

        ArrayList<Project> temp = Model.getInstance().getProjects();
        for (int i = 0; i < temp.size(); i++)
        {
            this.projectComboBox.addItem(temp.get(i).getName());
        }
        JFileChooser c = new JFileChooser(Model.getInstance().GetLastFilePath());

        int rVal = c.showOpenDialog(parent);
        if (rVal == JFileChooser.APPROVE_OPTION)
        {
            this.pedTextBox.setText(c.getSelectedFile().getAbsolutePath());
            this.nameField.setText(removeExtension(c.getSelectedFile().getName()));
            Model.getInstance().AccountForLastFilePath(c.getSelectedFile().getAbsolutePath());
        }
    }

    /**
     * Removes the extension from a file anme
     */
    private String removeExtension(String s)
    {
        int idx = s.indexOf('.');
        if (idx > 0)
        {
            return s.substring(0, idx);
        }
        return s;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dimButtonGroup = new javax.swing.ButtonGroup();
        headButtonGroup = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        mapTextBox = new javax.swing.JTextField();
        projectComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fileButton = new javax.swing.JButton();
        sampleButton = new javax.swing.JButton();
        fileHelpButton = new javax.swing.JButton();
        sampleHelpButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        pedTextBox = new javax.swing.JTextField();
        markerName = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        isPhenoRead = new javax.swing.JCheckBox();
        phenoNameTextbox = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        importButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();

        setTitle("Import Data");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel4.setAutoscrolls(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.red));

        jLabel3.setFont(new java.awt.Font("DejaVu Sans", 1, 18));
        jLabel3.setText(".ped File Import");

        mapTextBox.setEditable(false);
        mapTextBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mapTextBoxMouseClicked(evt);
            }
        });

        projectComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select Project>", "Create New Project" }));

        jLabel4.setText("Project");

        jLabel5.setText("PED file:");

        fileButton.setText("...");
        fileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileButtonActionPerformed(evt);
            }
        });

        sampleButton.setText("...");
        sampleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleButtonActionPerformed(evt);
            }
        });

        fileHelpButton.setText("?");
        fileHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileHelpButtonActionPerformed(evt);
            }
        });

        sampleHelpButton.setText("?");
        sampleHelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleHelpButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("MAP file:");

        pedTextBox.setEditable(false);
        pedTextBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pedTextBoxMouseClicked(evt);
            }
        });

        jLabel8.setText("Dataset name:");

        isPhenoRead.setText("Read in Phenotpye also (enter name in box to right)");
        isPhenoRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isPhenoReadActionPerformed(evt);
            }
        });

        phenoNameTextbox.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(markerName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 464, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(31, 31, 31)
                                .addComponent(projectComboBox, 0, 286, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8))
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(mapTextBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                                    .addComponent(nameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                                    .addComponent(pedTextBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sampleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sampleHelpButton, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                            .addComponent(fileHelpButton, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(isPhenoRead)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phenoNameTextbox, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(projectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(markerName)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pedTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(fileHelpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(mapTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sampleHelpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sampleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isPhenoRead)
                    .addComponent(phenoNameTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(89, 89, 89))
        );

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        importButton.setText("Import");
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText("                           ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(importButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(errorLabel)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(importButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Marker name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.closeDialog(null);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void fileHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileHelpButtonActionPerformed
        String s = "See plink's format help online for help with ped and map files. Do not include a header row.";
        JOptionPane.showMessageDialog(this, s, "Help", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_fileHelpButtonActionPerformed

    private void sampleHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sampleHelpButtonActionPerformed
        String s = "See plink's format help online for help with ped and map files. Do not include a header row. ";
        JOptionPane.showMessageDialog(this, s, "Help", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_sampleHelpButtonActionPerformed

    private void fileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileButtonActionPerformed
        JFileChooser c = new JFileChooser(Model.getInstance().GetLastFilePath());
        // Demonstrate "Open" dialog:
        int rVal = c.showOpenDialog(this);
        if (rVal == JFileChooser.APPROVE_OPTION)
        {
            this.pedTextBox.setText(c.getSelectedFile().getAbsolutePath());
            Model.getInstance().AccountForLastFilePath(c.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_fileButtonActionPerformed

    private void sampleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sampleButtonActionPerformed
        JFileChooser c = new JFileChooser(Model.getInstance().GetLastFilePath());
        // Demonstrate "Open" dialog:
        int rVal = c.showOpenDialog(this);
        if (rVal == JFileChooser.APPROVE_OPTION)
        {
            this.mapTextBox.setText(c.getSelectedFile().getAbsolutePath());
            Model.getInstance().AccountForLastFilePath(c.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_sampleButtonActionPerformed

    private void mapTextBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapTextBoxMouseClicked
        sampleButtonActionPerformed(null);
    }//GEN-LAST:event_mapTextBoxMouseClicked

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
        if (this.projectComboBox.getSelectedItem().equals("<Select Project>"))
        {
            String s = "You must select a valid project option.";
            this.errorLabel.setText(s);
            return;
        }

        if (this.nameField.getText().equals(""))
        {
            String s = "You must select a valid name.";
            this.errorLabel.setText(s);
            return;
        }

        if (this.projectComboBox.getSelectedItem().equals("Create New Project"))
        {
            NewProjectCreator creator = new NewProjectCreator(this, true);
            creator.show();

            if (creator.SUCCESS)
            {
                this.projectComboBox.addItem(creator.newProjectName);
                this.projectComboBox.setSelectedItem(creator.newProjectName);
                DataAddRemoveHandler.getInstance().addProject(creator.newProjectName);
                DataAddRemoveHandler.getInstance().refreshDisplay();
            }
            else
            {
                this.errorLabel.setText("Adding the new project failed.");
                return;
            }
        }

        if (Model.getInstance().getProject(projectComboBox.getSelectedItem().toString()).getMarker(this.nameField.getText()) != null)
        {
            this.errorLabel.setText("This marker set already exists in this project");
            return;
        }

        File ped = new File(this.pedTextBox.getText());
        if (!ped.exists())
        {
            this.errorLabel.setText("PED file does not exist.");
            return;
        }

        File map = new File(this.mapTextBox.getText());
        if (!map.exists())
        {
            this.errorLabel.setText("MAP file does not exist.");
            return;
        }

        if(this.isPhenoRead.isSelected() && this.phenoNameTextbox.getText().trim().length() == 0)
        {
            this.errorLabel.setText("Please set the phenotype name for the file.");
            return;
        }

        setVisible(false);
        dispose();

        form = ThreadingItemFrame.getInstance();
        item = new PedItem(form, pedTextBox.getText(), this.projectComboBox.getSelectedItem().toString(),
                this.pedTextBox.getText(), this.mapTextBox.getText(), this.nameField.getText(),
                this.isPhenoRead.isSelected(), this.phenoNameTextbox.getText());
        form.addToThreadList(item);
        form.setVisible(true);
        form.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }//GEN-LAST:event_importButtonActionPerformed

    private void pedTextBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pedTextBoxMouseClicked
        fileButtonActionPerformed(null);
}//GEN-LAST:event_pedTextBoxMouseClicked

    private void isPhenoReadActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_isPhenoReadActionPerformed
    {//GEN-HEADEREND:event_isPhenoReadActionPerformed
        this.phenoNameTextbox.setEnabled(this.isPhenoRead.isSelected());
    }//GEN-LAST:event_isPhenoReadActionPerformed

    /**
     * Set the project that will be the default selected project in this import
     */
    public void setSeletedProject(String project)
    {
        for (int i = 0; i < this.projectComboBox.getItemCount(); i++)
        {
            if (this.projectComboBox.getItemAt(i).equals(project))
            {
                this.projectComboBox.setSelectedIndex(i);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.ButtonGroup dimButtonGroup;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton fileButton;
    private javax.swing.JButton fileHelpButton;
    private javax.swing.ButtonGroup headButtonGroup;
    private javax.swing.JButton importButton;
    private javax.swing.JCheckBox isPhenoRead;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField mapTextBox;
    private javax.swing.JLabel markerName;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField pedTextBox;
    private javax.swing.JTextField phenoNameTextbox;
    private javax.swing.JComboBox projectComboBox;
    private javax.swing.JButton sampleButton;
    private javax.swing.JButton sampleHelpButton;
    // End of variables declaration//GEN-END:variables
}
