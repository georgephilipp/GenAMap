package control.algodialog;

import BiNGO.BingoParameters;
import algorithm.AlgorithmView;
import algorithm.GeneModuleParameterObject;
import datamodel.AssociationSet;
import java.io.IOException;
import java.util.ArrayList;
import datamodel.Project;
import datamodel.MarkerSet;
import datamodel.Model;
import datamodel.Network;
import datamodel.TraitSet;

/**
 * Starts a gene module analysis on the cluster.
 * @author ross
 */
public class ModuleAlgorithmDialog extends java.awt.Dialog
{
    /**
     * Creates a new ModuleAlgrotihmDialog
     */
    public ModuleAlgorithmDialog(java.awt.Frame parent, boolean modal, AlgorithmView view,
            String project, String traits, String network) throws IOException
    {
        super(parent, modal);
        this.setLocation(parent.getLocation());
        initComponents();
        this.setTitle("Run Module Analysis");

        this.traitComboBox.setEnabled(false);

        ArrayList<Project> temp = Model.getInstance().getProjects();
        for (int i = 0; i < temp.size(); i++)
        {
            this.projectComboBox.addItem(temp.get(i).getName());
        }

        if (project != null)
        {
            this.projectComboBox.setSelectedItem(project);
        }
        if (traits != null)
        {
            this.traitComboBox.setSelectedItem(traits);
        }
        if (network != null)
        {
            this.networkComboBox.setSelectedItem(network);
        }

        BingoParameters parms = new BingoParameters("");
        for (String s : parms.getOntologyLabels())
        {
            this.goComboBox.addItem(s);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        projectComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        traitComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        networkComboBox = new javax.swing.JComboBox();
        importButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        assocsetComboBox = new javax.swing.JComboBox();
        errorLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        clusterComboBox1 = new javax.swing.JComboBox();
        goComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.LineBorder(java.awt.Color.blue, 2, true));

        projectComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select Project>" }));
        projectComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("Project");

        jLabel5.setText("Trait Set");

        traitComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select Trait>" }));
        traitComboBox.setEnabled(false);
        traitComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traitComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("Network");

        networkComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select Network>" }));
        networkComboBox.setEnabled(false);
        networkComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkComboBoxActionPerformed(evt);
            }
        });

        importButton.setText("Run");
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Association Set");

        assocsetComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select Association>" }));
        assocsetComboBox.setEnabled(false);
        assocsetComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assocsetComboBoxActionPerformed(evt);
            }
        });

        errorLabel.setForeground(new java.awt.Color(255, 51, 0));
        errorLabel.setText("                                      ");

        jLabel9.setText("Cluster");

        clusterComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select Cluster>" }));
        clusterComboBox1.setEnabled(false);
        clusterComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clusterComboBox1ActionPerformed(evt);
            }
        });

        goComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select GO Set>" }));
        goComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setText("GO Set");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel4)
                                    .addGap(13, 13, 13))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5)
                                    .addGap(11, 11, 11))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6)
                                    .addGap(10, 10, 10)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel9))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel8))
                                    .addComponent(jLabel7))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(clusterComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(goComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(traitComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(networkComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(projectComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(assocsetComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(importButton, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)))
                    .addComponent(errorLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(importButton))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(traitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel5)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(networkComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(clusterComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(assocsetComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(errorLabel)
                .addGap(29, 29, 29))
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    /**
     * Checks conditions and starts the algorithm. 
     * @param evt
     */
    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
        if (this.projectComboBox.getSelectedItem().equals("<Select Project>"))
        {
            String s = "You must select a valid project option.";
            this.errorLabel.setText(s);
            return;
        }

        if (this.traitComboBox.getSelectedItem().equals("<Select Traits>"))
        {
            String s = "You must select a valid traits option.";
            this.errorLabel.setText(s);
            return;
        }

        if (this.clusterComboBox1.getSelectedItem().equals("<Select Cluster>"))
        {
            String s = "You must select a valid cluster option.";
            this.errorLabel.setText(s);
            return;
        }

        if (this.assocsetComboBox.getSelectedItem().equals("<Select Association>"))
        {
            String s = "You must select a valid association option.";
            this.errorLabel.setText(s);
            return;
        }

        if (this.networkComboBox.getSelectedItem().equals("<Select Network>"))
        {
            String s = "You must select a valid network option.";
            this.errorLabel.setText(s);
            return;
        }

        if (this.goComboBox.getSelectedItem().equals("<Select GO Set>") ||
                this.goComboBox.getSelectedItem().equals("Custom...") ||
                this.goComboBox.getSelectedItem().equals("---"))
        {
            String s = "You must select a valid GO option.";
            this.errorLabel.setText(s);
            return;
        }

        String projectName = projectComboBox.getSelectedItem().toString();
        String traitName = traitComboBox.getSelectedItem().toString();
        String clusterName = clusterComboBox1.getSelectedItem().toString();
        String networkName = this.networkComboBox.getSelectedItem().toString();
        String associationName = this.assocsetComboBox.getSelectedItem().toString();

        Project ap = Model.getInstance().getProject(projectName);
        TraitSet ts = ap.getTrait(traitName);
        int clusterid = ts.getClusterId(clusterName);
        ArrayList<Network> nets = ts.getNetworks();
        Network nt = (Network) ts.getTraitStructure(networkName);

        AssociationSet as = ap.getAssociation(associationName);

        GeneModuleParameterObject params = new GeneModuleParameterObject(nt.getId(),
                as.getId(), clusterid, goComboBox.getSelectedItem().toString());
        AlgorithmView.getInstance().addAlgorithm("GMD", 18, ap.getId(), ts.getId(), 0, params);
        this.closeDialog(null);
}//GEN-LAST:event_importButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.closeDialog(null);
}//GEN-LAST:event_cancelButtonActionPerformed

    private void projectComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectComboBoxActionPerformed
        if (this.projectComboBox.getSelectedItem().equals("<Select Project>"))
        {
            this.traitComboBox.setEnabled(false);
            this.clusterComboBox1.setEnabled(false);
            this.assocsetComboBox.setEnabled(false);
            this.networkComboBox.setEnabled(false);
            return;
        }
        else
        {
            this.traitComboBox.setEnabled(true);
            this.assocsetComboBox.setEnabled(true);
        }

        Project project = Model.getInstance().getProject(this.projectComboBox.getSelectedItem().toString());

        this.traitComboBox.removeAllItems();

        this.traitComboBox.addItem("<Select Traits>");
        for (int i = 0; i < project.getTraits().size(); i++)
        {
            if (project.getTraits().get(i).getHasData())
            {
                this.traitComboBox.addItem(project.getTraits().get(i).getName());
            }
        }

    }//GEN-LAST:event_projectComboBoxActionPerformed

    private void traitComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traitComboBoxActionPerformed
        if (this.traitComboBox.getSelectedObjects().length == 0 || this.traitComboBox.getSelectedItem().equals("<Select Traits>") || !this.traitComboBox.isEnabled())
        {

            return;
        }

        networkComboBox.removeAllItems();
        networkComboBox.addItem("<Select Network>");
        Project project = Model.getInstance().getProject(this.projectComboBox.getSelectedItem().toString());

        TraitSet ts = project.getTrait(this.traitComboBox.getSelectedItem().toString());


        this.networkComboBox.setEnabled(true);

        TraitSet t = project.getTrait(this.traitComboBox.getSelectedItem().toString());
        for (int i = 0; i < t.getNetworkIdentifiers().size(); i++)
        {
            this.networkComboBox.addItem(t.getNetworkIdentifiers().get(i));
        }

        this.assocsetComboBox.removeAllItems();
        this.assocsetComboBox.addItem("<Select Association>");
        for (int i = 0; i < project.getAssocs().size(); i++)
        {
            AssociationSet as = project.getAssocs().get(i);
            if (as.getTraitSet().getName().equals(ts.getName()))
            {
                this.assocsetComboBox.addItem(as.getName());
            }
        }
    }//GEN-LAST:event_traitComboBoxActionPerformed

    private void assocsetComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assocsetComboBoxActionPerformed
    }//GEN-LAST:event_assocsetComboBoxActionPerformed

    private void networkComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_networkComboBoxActionPerformed
    {//GEN-HEADEREND:event_networkComboBoxActionPerformed
        Project p = Model.getInstance().getProject(this.projectComboBox.getSelectedItem().toString());
        TraitSet ts = p.getTrait(this.traitComboBox.getSelectedItem().toString());
        Network n = ts == null || networkComboBox.getSelectedItem() == null ? null : (Network) ts.getTraitStructure(this.networkComboBox.getSelectedItem().toString());
        if (n != null)
        {
            this.clusterComboBox1.setEnabled(true);
            clusterComboBox1.removeAllItems();
            clusterComboBox1.addItem("<Select Cluster>");
            for (String s : ts.getClusters())
            {
                clusterComboBox1.addItem(s);
            }
        }
        else
        {
            this.clusterComboBox1.setEnabled(false);
        }
    }//GEN-LAST:event_networkComboBoxActionPerformed

    private void clusterComboBox1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clusterComboBox1ActionPerformed
    {//GEN-HEADEREND:event_clusterComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clusterComboBox1ActionPerformed

    private void goComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_goComboBoxActionPerformed
    {//GEN-HEADEREND:event_goComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_goComboBoxActionPerformed

    public void setSeletedProject(String project)
    {
        for (int i = 0; i < this.projectComboBox.getItemCount(); i++)
        {
            if (this.projectComboBox.getItemAt(i).equals(project))
            {
                this.projectComboBox.setSelectedIndex(i);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox assocsetComboBox;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox clusterComboBox1;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JComboBox goComboBox;
    private javax.swing.JButton importButton;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox networkComboBox;
    private javax.swing.JComboBox projectComboBox;
    private javax.swing.JComboBox traitComboBox;
    // End of variables declaration//GEN-END:variables
}
